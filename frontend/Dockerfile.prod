###########
# BUILDER #
###########

# base image
FROM node:13.10.1-alpine as builder

# set working directory
WORKDIR /usr/src/app

# add `/usr/src/app/node_modules/.bin` to $PATH
ENV PATH /usr/src/app/node_modules/.bin:$PATH

# install and cache app dependencies
COPY package.json /usr/src/app/package.json
COPY package-lock.json /usr/src/app/package-lock.json
RUN npm ci
RUN npm install react-scripts@3.3.0 -g --silent

# set environment variables
# TODO read env vars from docker-compose.prod.yml
ARG REACT_APP_BACKEND_SERVICE_URL
# ENV REACT_APP_BACKEND_SERVICE_URL http://localhost:5001
ENV REACT_APP_BACKEND_SERVICE_URL http://my-elb-1354012222.us-west-1.elb.amazonaws.com

ENV NODE_ENV production
ARG REACT_APP_SPOTIFY_REDIRECT_TO_CLIENT_HOSTNAME
# ENV REACT_APP_SPOTIFY_REDIRECT_TO_CLIENT_HOSTNAME localhost:3007 
ENV REACT_APP_SPOTIFY_REDIRECT_TO_CLIENT_HOSTNAME my-elb-1354012222.us-west-1.elb.amazonaws.com

# create build
COPY . /usr/src/app
RUN npm run build

#########
# FINAL #
#########

# base image
FROM nginx:1.17.9-alpine

# update nginx conf
RUN rm -rf /etc/nginx/conf.d
COPY conf /etc/nginx

# copy static files
COPY --from=builder /usr/src/app/build /usr/share/nginx/html

# expose port
EXPOSE 80

# run nginx
CMD ["nginx", "-g", "daemon off;"]